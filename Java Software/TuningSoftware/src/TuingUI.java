/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.JPanel;
import org.knowm.xchart.QuickChart;
import org.knowm.xchart.SwingWrapper;
import org.knowm.xchart.XChartPanel;
import org.knowm.xchart.XYChart;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Harry Thorpe
 */
public class TuingUI extends javax.swing.JFrame {

    static ArrayList<String> CommandHistoryList = new ArrayList<String>();
    static int listcount = 0;
    static String CommandHistory = "";
    
    ChartObject charter;
    Serial serial;
    
    /**
     * Creates new form TuingUI
     */
    public TuingUI() {
        initComponents();
        
        lb_console.setText("");
        
        //create chart
        charter = new ChartObject(chartPnlArea);
        charter.start();
        
        //create serial connection
        serial = new Serial(ta_reviced,charter);
        Comms_Label.setText(serial.getCommsPort());
    }
    
          
    public void submit(String command){
        CommandHistory += "["+ CommandHistoryList.size() + "]" + command +"\n";
        CommandHistoryList.add(command);
        listcount = CommandHistoryList.size();
        ta_history.setText(CommandHistory);
        lb_console.setText(command);
        
        serial.sendData(command);

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu3 = new javax.swing.JMenu();
        Connect_Button = new javax.swing.JButton();
        tx_command = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta_history = new javax.swing.JTextArea();
        Send_Button = new javax.swing.JButton();
        Step_Button = new javax.swing.JButton();
        Disconnect_Button = new javax.swing.JButton();
        SetTunings_Button = new javax.swing.JButton();
        kpSlider = new javax.swing.JSlider();
        kdSlider = new javax.swing.JSlider();
        kiSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lb_console = new javax.swing.JLabel();
        chartPnlArea = new javax.swing.JPanel();
        Comms_Titel_Label = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ta_reviced = new javax.swing.JTextArea();
        Command_Titel_Label = new javax.swing.JLabel();
        Recived_Titel_Label = new javax.swing.JLabel();
        Comms_Label = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();
        SetSpeed_Button = new javax.swing.JButton();
        Start_CheckBox = new javax.swing.JCheckBox();
        SpeedSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        currentSpeed = new javax.swing.JTextField();
        currentP = new javax.swing.JTextField();
        currentI = new javax.swing.JTextField();
        currentD = new javax.swing.JTextField();

        jMenu3.setText("jMenu3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Connect_Button.setText("Connect");
        Connect_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Connect_ButtonActionPerformed(evt);
            }
        });

        tx_command.setToolTipText("Enter Command");
        tx_command.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tx_commandKeyPressed(evt);
            }
        });

        ta_history.setEditable(false);
        ta_history.setColumns(20);
        ta_history.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        ta_history.setRows(5);
        ta_history.setEnabled(false);
        ta_history.setFocusable(false);
        jScrollPane1.setViewportView(ta_history);

        Send_Button.setText("Send !");
        Send_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Send_ButtonActionPerformed(evt);
            }
        });

        Step_Button.setText("Step Inpulse");
        Step_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Step_ButtonActionPerformed(evt);
            }
        });

        Disconnect_Button.setText("Disconnect");
        Disconnect_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Disconnect_ButtonActionPerformed(evt);
            }
        });

        SetTunings_Button.setText("Send Tunings");
        SetTunings_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetTunings_ButtonActionPerformed(evt);
            }
        });

        kpSlider.setMajorTickSpacing(10);
        kpSlider.setMinorTickSpacing(5);
        kpSlider.setPaintTicks(true);
        kpSlider.setValue(0);
        kpSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.W_RESIZE_CURSOR));
        kpSlider.setDoubleBuffered(true);
        kpSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                kpSliderStateChanged(evt);
            }
        });

        kdSlider.setMajorTickSpacing(10);
        kdSlider.setMinorTickSpacing(5);
        kdSlider.setPaintTicks(true);
        kdSlider.setValue(0);
        kdSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                kdSliderStateChanged(evt);
            }
        });

        kiSlider.setMajorTickSpacing(10);
        kiSlider.setMinorTickSpacing(5);
        kiSlider.setPaintTicks(true);
        kiSlider.setValue(0);
        kiSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                kiSliderStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("kP");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("kI");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("kD");

        lb_console.setText("console");

        chartPnlArea.setLayout(new javax.swing.BoxLayout(chartPnlArea, javax.swing.BoxLayout.LINE_AXIS));

        Comms_Titel_Label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Comms_Titel_Label.setText("Comms Port:");

        ta_reviced.setColumns(20);
        ta_reviced.setFont(new java.awt.Font("Courier New", 0, 10)); // NOI18N
        ta_reviced.setRows(5);
        jScrollPane2.setViewportView(ta_reviced);

        Command_Titel_Label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Command_Titel_Label.setText("Sent Commands");

        Recived_Titel_Label.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Recived_Titel_Label.setText("Recived Commands");

        Comms_Label.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Comms_Label.setText("port number");

        jScrollBar1.addAdjustmentListener(new java.awt.event.AdjustmentListener() {
            public void adjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {
                jScrollBar1AdjustmentValueChanged(evt);
            }
        });

        SetSpeed_Button.setText("Send speed");
        SetSpeed_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SetSpeed_ButtonActionPerformed(evt);
            }
        });

        Start_CheckBox.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Start_CheckBox.setText("Start");
        Start_CheckBox.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                Start_CheckBoxStateChanged(evt);
            }
        });

        SpeedSlider.setMajorTickSpacing(50);
        SpeedSlider.setMaximum(200);
        SpeedSlider.setMinimum(-200);
        SpeedSlider.setMinorTickSpacing(10);
        SpeedSlider.setPaintTicks(true);
        SpeedSlider.setValue(0);
        SpeedSlider.setCursor(new java.awt.Cursor(java.awt.Cursor.W_RESIZE_CURSOR));
        SpeedSlider.setDoubleBuffered(true);
        SpeedSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpeedSliderStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("speed");

        currentSpeed.setText("0.0");
        currentSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                currentSpeedKeyTyped(evt);
            }
        });

        currentP.setText("0.0");
        currentP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                currentPKeyTyped(evt);
            }
        });

        currentI.setText("0.0");
        currentI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                currentIKeyTyped(evt);
            }
        });

        currentD.setText("0.0");
        currentD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                currentDKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Connect_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Disconnect_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addComponent(Start_CheckBox)))
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Step_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SetTunings_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SetSpeed_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Command_Titel_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Recived_Titel_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Comms_Label)
                            .addComponent(Comms_Titel_Label)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(tx_command, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(Send_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(lb_console, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabel1))
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(kiSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                                    .addComponent(kpSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(kdSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(SpeedSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(currentP, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(currentSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(currentI, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(currentD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 577, Short.MAX_VALUE)
                .addComponent(chartPnlArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Connect_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Step_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SetSpeed_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Disconnect_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SetTunings_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Start_CheckBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SpeedSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(currentSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1)
                                            .addComponent(kpSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(currentP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(kiSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(currentI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(currentD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel3)
                                                    .addComponent(kdSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(4, 4, 4)
                                        .addComponent(Comms_Titel_Label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Comms_Label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(tx_command, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Send_Button))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Command_Titel_Label)
                                            .addComponent(Recived_Titel_Label))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jScrollPane2))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_console))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(chartPnlArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Disconnect_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Disconnect_ButtonActionPerformed
        // TODO add your handling code here:
        //Disconnect Serial
        serial.closeConnection();
    }//GEN-LAST:event_Disconnect_ButtonActionPerformed

    private void SetTunings_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetTunings_ButtonActionPerformed
        // TODO add your handling code here:
        //Send Tuning values
        try{
                double temp = Double.parseDouble(currentP.getText());
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KP is not a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        try{
                double temp = Double.parseDouble(currentI.getText());
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KI is not a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        try{
                double temp = Double.parseDouble(currentD.getText());
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KD is not a number", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        
        submit("vs_kp"+currentP.getText());
        
        submit("vs_ki"+currentI.getText());
        
        submit("vs_kd"+currentD.getText());
        
    }//GEN-LAST:event_SetTunings_ButtonActionPerformed

    private void Send_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Send_ButtonActionPerformed
        //Serial send command 
        submit(tx_command.getText());
        tx_command.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_Send_ButtonActionPerformed

    private void kpSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_kpSliderStateChanged
        currentP.setText(Double.toString((double)kpSlider.getValue()/100));
    }//GEN-LAST:event_kpSliderStateChanged

    private void kiSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_kiSliderStateChanged
        // TODO add your handling code here:
        currentI.setText(Double.toString((double)kiSlider.getValue()/100));

    }//GEN-LAST:event_kiSliderStateChanged

    private void kdSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_kdSliderStateChanged
        // TODO add your handling code here:
        currentD.setText(Double.toString((double)kdSlider.getValue()/100));

    }//GEN-LAST:event_kdSliderStateChanged

    private void Connect_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Connect_ButtonActionPerformed
        // TODO add your handling code here:
        //Connect serial
        serial.openConnection();
        
    }//GEN-LAST:event_Connect_ButtonActionPerformed

    private void Step_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Step_ButtonActionPerformed
        // TODO add your handling code here:
        // Send step Inpulse
    }//GEN-LAST:event_Step_ButtonActionPerformed

    private void tx_commandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tx_commandKeyPressed
        // TODO add your handling code here:
        //System.out.print(evt.getKeyCode());
        switch (evt.getKeyCode()){
            case 10://enter
                submit(tx_command.getText());
                tx_command.setText("");
                break;
            case 38://up
                if(listcount > 0){
                    listcount--;
                    tx_command.setText(CommandHistoryList.get(listcount));
                }
                break;
            case 40://down
                if(listcount < CommandHistoryList.size()-1){
                    listcount++;
                    tx_command.setText(CommandHistoryList.get(listcount));
                }
                break;
        }
    }//GEN-LAST:event_tx_commandKeyPressed

    private void jScrollBar1AdjustmentValueChanged(java.awt.event.AdjustmentEvent evt) {//GEN-FIRST:event_jScrollBar1AdjustmentValueChanged
        // TODO add your handling code here:
        //System.out.println(jScrollBar1.getValue());
        charter.setScale(jScrollBar1.getValue()+20);
    }//GEN-LAST:event_jScrollBar1AdjustmentValueChanged

    private void SetSpeed_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SetSpeed_ButtonActionPerformed
        // TODO add your handling code here:
        submit("vs_set_speed"+currentSpeed.getText());
        try{
                charter.setPvSpeed(Double.parseDouble(currentSpeed.getText()));
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "Speed is not a number", "Error", JOptionPane.ERROR_MESSAGE);
            }
        
    }//GEN-LAST:event_SetSpeed_ButtonActionPerformed

    private void SpeedSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpeedSliderStateChanged
        // TODO add your handling code here:
        currentSpeed.setText(Double.toString((double)SpeedSlider.getValue()));
    }//GEN-LAST:event_SpeedSliderStateChanged

    private void Start_CheckBoxStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_Start_CheckBoxStateChanged
        // TODO add your handling code here:
        if(Start_CheckBox.isSelected())submit("vs_start");
        else  submit("vs_stop");
    }//GEN-LAST:event_Start_CheckBoxStateChanged

    private void currentSpeedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentSpeedKeyTyped
        int in = evt.getKeyChar();
        System.out.println(in);
        int[] checks = new int[] {8,37,39,46,48,49,50,51,52,53,54,55,56,57,127};
        if(!contains(checks, in)){
            evt.consume();
        }
        if(in == 10){
            try{
                SpeedSlider.setValue((int)Double.parseDouble(currentSpeed.getText()));
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "Speed is not a number", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_currentSpeedKeyTyped

    private void currentPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentPKeyTyped
        int in = evt.getKeyChar();
        //System.out.println(in);
        int[] checks = new int[] {8,37,39,46,48,49,50,51,52,53,54,55,56,57,127};
        if(!contains(checks, in)){
            evt.consume();
        }
                if(in == 10){
            try{
                kpSlider.setValue((int)Double.parseDouble(currentP.getText()));
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KP is not a number", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_currentPKeyTyped

    private void currentIKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentIKeyTyped
        int in = evt.getKeyChar();
        //System.out.println(in);
        int[] checks = new int[] {8,37,39,46,48,49,50,51,52,53,54,55,56,57,127};
        if(!contains(checks, in)){
            evt.consume();
        }
                if(in == 10){
            try{
                kiSlider.setValue((int)Double.parseDouble(currentI.getText()));
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KI is not a number", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_currentIKeyTyped

    private void currentDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_currentDKeyTyped
        int in = evt.getKeyChar();
        //System.out.println(in);
        int[] checks = new int[] {8,37,39,46,48,49,50,51,52,53,54,55,56,57,127};
        if(!contains(checks, in)){
            evt.consume();
        }
                if(in == 10){
            try{
                kdSlider.setValue((int)Double.parseDouble(currentD.getText()));
            }
            catch(NumberFormatException ex){
                final JPanel panel = new JPanel();
                JOptionPane.showMessageDialog(panel, "KD is not a number", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_currentDKeyTyped

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TuingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TuingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TuingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TuingUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TuingUI().setVisible(true);
                
            }
        });
        
    }
    
    public boolean contains(final int[] array, final int key) {
    for (final int i : array) {
        if (i == key) {
            return true;
        }
    }
    return false;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Command_Titel_Label;
    private javax.swing.JLabel Comms_Label;
    private javax.swing.JLabel Comms_Titel_Label;
    private javax.swing.JButton Connect_Button;
    private javax.swing.JButton Disconnect_Button;
    private javax.swing.JLabel Recived_Titel_Label;
    private javax.swing.JButton Send_Button;
    private javax.swing.JButton SetSpeed_Button;
    private javax.swing.JButton SetTunings_Button;
    private javax.swing.JSlider SpeedSlider;
    private javax.swing.JCheckBox Start_CheckBox;
    private javax.swing.JButton Step_Button;
    private static javax.swing.JPanel chartPnlArea;
    private javax.swing.JTextField currentD;
    private javax.swing.JTextField currentI;
    private javax.swing.JTextField currentP;
    private javax.swing.JTextField currentSpeed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider kdSlider;
    private javax.swing.JSlider kiSlider;
    private javax.swing.JSlider kpSlider;
    private javax.swing.JLabel lb_console;
    private javax.swing.JTextArea ta_history;
    private javax.swing.JTextArea ta_reviced;
    private javax.swing.JTextField tx_command;
    // End of variables declaration//GEN-END:variables
}
